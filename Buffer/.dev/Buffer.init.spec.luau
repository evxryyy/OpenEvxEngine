--optional file.

return function()
	local Buffer = require(script.Parent.Parent)
	describe("should create a buffer",function() 
		local new_buffer = Buffer.create(1)
		expect(new_buffer).to.be.a("buffer")
	end)
	describe("should write a signed interger 24 and read it",function() 
		local new_buffer = Buffer.create(3)
		new_buffer:WriteI24(100)
		expect(new_buffer).to.be.a("buffer")
		expect(new_buffer:ReadI24(0)).to.be.equal(100)
	end)
	describe("should write a signed interger 40 and read it",function()
		local new_buffer = Buffer.create(5)
		new_buffer:WriteI24(100)
		expect(new_buffer).to.be.a("buffer")
		expect(new_buffer:ReadI24(0)).to.be.equal(100)
	end)
	describe("should write a signed interger 48 and read it",function()
		local new_buffer = Buffer.create(6)
		new_buffer:WriteI24(100)
		expect(new_buffer).to.be.a("buffer")
		expect(new_buffer:ReadI24(0)).to.be.equal(100)
	end)
	describe("should write a signed interger 54 and read it",function()
		local new_buffer = Buffer.create(7)
		new_buffer:WriteI24(100)
		expect(new_buffer).to.be.a("buffer")
		expect(new_buffer:ReadI24(0)).to.be.equal(100)
	end)
	describe("should write a float 16 and read it",function()
		local new_buffer = Buffer.create(2)
		new_buffer:WriteF16(100.525)
		expect(new_buffer).to.be.a("buffer")
		expect(new_buffer:ReadF16(0)).to.be.a("number")
	end)
end
